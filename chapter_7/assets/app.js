angular.module("app",["ngRoute","ngResource"]).config(["$routeProvider",function(o){o.when("/",{controller:"PostsCtrl as pstCtrl",templateUrl:"posts.html"}).when("/register",{controller:"RegisterCtrl as regCtrl",templateUrl:"register.html"}).when("/login",{controller:"LoginCtrl as lgnCtrl",templateUrl:"login.html"})}]).service("api",function(){this.postsPageUrl="http://localhost:19919/#/",this.loginPageUrl="http://localhost:19919/#/login",this.registerPageUrl="http://localhost:19919/#/register"}).service("WebSocketSvc",["$rootScope","$window",function(o,t){function n(){return"https:"===t.location.protocol?"wss://"+window.location.host:"ws://"+window.location.host}var e;this.connect=function(){e=new WebSocket(n()),e.onclose=function(o){console.log("WebSocket closed. Reconnecting..."),$timeout(connect,1e4)},e.onopen=function(){console.log("WebSocket connected")},e.onmessage=function(t){console.log(t);var n=JSON.parse(t.data);o.$broadcast("ws:"+n.topic,n)}},this.send=function(o,t){var n=JSON.stringify({topic:o,data:t});e.send(n)}}]).run(["WebSocketSvc",function(o){o.connect()}]),angular.module("app").controller("ApplicationCtrl",["$scope","UserSvc","api",function(o,t,n){var e=this;e.isLogin=!1,o.$on("login",function(o,n){t.setCurrentUser(n),e.currentUser=n,e.isLogin=!0}),e.logout=function(){e.currentUser=null,e.isLogin=!1,t.logout(),window.location.href=n.loginPageUrl}}]),angular.module("app").controller("LoginCtrl",["$scope","UserSvc","api",function(o,t,n){var e=this;e.login=function(e,s){t.login(e,s).then(function(e){console.log("LoginCtrl user:",e),o.$emit("login",e.data),t.setCurrentUser(e.data),window.location.href=n.postsPageUrl})}}]),angular.module("app").controller("PostsCtrl",["$scope","PostsSvc","UserSvc",function(o,t,n){var e=this;e.posts=[],t.fetch().success(function(o){e.posts=o}).error(function(o){console.log(o)}),console.log("currentUser: ",n.currentUser),e.addPost=function(){console.log("in add post"),console.log("postBody",e.postBody),e.postBody&&t.create({username:n.currentUser.username,body:e.postBody}).success(function(o){console.log("addPost:",o),e.postBody=""})},o.$on("ws:new_post",function(t,n){o.$apply(function(){console.log("ws:new_post",n.data),e.posts.unshift(n.data)})})}]),angular.module("app").service("PostsSvc",["$http","$resource",function(o,t){this.fetch=function(){return o.get("/api/posts")},this.create=function(t){return o.post("/api/posts",t)},this.resource=t("/api/posts")}]),angular.module("app").controller("RegisterCtrl",["$scope","UserSvc","api",function(o,t,n){var e=this;e.registry=function(o,e){t.registry(o,e).then(function(o){"SUCCESS"==o.status?window.location.href=n.loginPageUrl:alert("用户注册失败")})}}]),angular.module("app").service("UserSvc",["$http",function(o){var t=this;t.currentUser=null,t.isLogin=!1,t.setCurrentUser=function(o){t.currentUser=o,t.isLogin=!0},t.removeUser=function(){t.currentUser=null,t.isLogin=!1},t.getUser=function(){return o.get("/api/auth/user",{headers:{"X-Auth":this.token}})},t.logout=function(){this.token=null,t.removeUser()},t.login=function(n,e){return o.post("/api/auth/sessions",{username:n,password:e}).then(function(o){return t.token=o.data,console.log(o),t.getUser()})},t.registry=function(t,n){return o.post("/api/auth/user",{username:t,password:n}).then(function(o){return console.log("result: "),console.log(o),o.data})}}]);